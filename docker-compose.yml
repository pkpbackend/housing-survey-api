version: '3.9'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: survey-db
    environment:
      POSTGRES_USER: survey_user
      POSTGRES_PASSWORD: survey_pass
      POSTGRES_DB: survey_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  # Load Balancer using HAProxy
  haproxy:
    image: haproxy:2.9
    container_name: haproxy
    ports:
      - "80:80"       # App traffic
      - "8404:8404"   # HAProxy stats
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - frontend
      - backend
    restart: unless-stopped

  # Go API App Instance 1
  app1:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: go-api-1
    environment:
      - APP_ENV=development
    expose:
      - "8080"
    networks:
      - frontend
      - backend
    restart: unless-stopped

  # Go API App Instance 2
  app2:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: go-api-2
    environment:
      - APP_ENV=development
    expose:
      - "8080"
    networks:
      - frontend
      - backend
    restart: unless-stopped

  # Go API App Instance 3
  app3:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: go-api-3
    environment:
      - APP_ENV=development
    expose:
      - "8080"
    networks:
      - frontend
      - backend
    restart: unless-stopped

# Named volumes
volumes:
  pgdata:

# Networks
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge